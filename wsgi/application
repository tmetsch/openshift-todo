#!/usr/bin/python
from pyramid.configuration import Configurator
from pyramid.session import UnencryptedCookieSessionFactoryConfig
import os
import wsgi_todo

#datadir = os.environ['OPENSHIFT_DATA_DIR']
datadir = os.path.dirname(os.path.abspath(__file__))
#here = os.path.join('..', datadir)
here = datadir


def application(environ, start_response):
    wsgi_todo.here = here

    # configuration settings
    settings = {}
    settings['reload_all'] = True
    settings['debug_all'] = True
    settings['mako.directories'] = os.path.join(here, 'static')
    settings['db'] = os.path.join(here, '..', 'data', 'tasks.db')
    # session factory
    session_factory = UnencryptedCookieSessionFactoryConfig('itsaseekreet')
    # configuration setup
    config = Configurator(settings=settings, session_factory=session_factory)
    # routes setup
    config.add_route('list', '/')
    config.add_route('new', '/new')
    config.add_route('close', '/close/{id}')
    # static view setup
    config.add_static_view('static', os.path.join(here, 'static'))
    # scan for @view_config and @subscriber decorators
    config.scan(package='wsgi_todo')

    # serve app
    return config.make_wsgi_app()(environ, start_response)

if __name__ == '__main__':
   from wsgiref.simple_server import make_server
   httpd = make_server('localhost', 8051, application)
   # Wait for a single request, serve it and quit.
   httpd.serve_forever()
